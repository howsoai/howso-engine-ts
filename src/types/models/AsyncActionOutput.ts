/**
 * Howso API
 * OpenAPI implementation for interacting with the Howso API. 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    AsyncActionCancelledOutput,
    AsyncActionCancelledOutputFromJSONTyped,
    AsyncActionCancelledOutputToJSON,
} from './AsyncActionCancelledOutput';
import {
    AsyncActionCompleteOutput,
    AsyncActionCompleteOutputFromJSONTyped,
    AsyncActionCompleteOutputToJSON,
} from './AsyncActionCompleteOutput';
import {
    AsyncActionFailedOutput,
    AsyncActionFailedOutputFromJSONTyped,
    AsyncActionFailedOutputToJSON,
} from './AsyncActionFailedOutput';

/**
 * @type AsyncActionOutput
 * 
 * @export
 */
export type AsyncActionOutput = { status: 'cancelled' } & AsyncActionCancelledOutput | { status: 'complete' } & AsyncActionCompleteOutput | { status: 'failed' } & AsyncActionFailedOutput;

export function AsyncActionOutputFromJSON(json: any): AsyncActionOutput {
    return AsyncActionOutputFromJSONTyped(json, false);
}

export function AsyncActionOutputFromJSONTyped(json: any, ignoreDiscriminator: boolean): AsyncActionOutput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['status']) {
        case 'cancelled':
            return {...AsyncActionCancelledOutputFromJSONTyped(json, true), status: 'cancelled'};
        case 'complete':
            return {...AsyncActionCompleteOutputFromJSONTyped(json, true), status: 'complete'};
        case 'failed':
            return {...AsyncActionFailedOutputFromJSONTyped(json, true), status: 'failed'};
        default:
            throw new Error(`No variant of AsyncActionOutput exists with 'status=${json['status']}'`);
    }
}

export function AsyncActionOutputToJSON(value?: AsyncActionOutput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['status']) {
        case 'cancelled':
            return AsyncActionCancelledOutputToJSON(value);
        case 'complete':
            return AsyncActionCompleteOutputToJSON(value);
        case 'failed':
            return AsyncActionFailedOutputToJSON(value);
        default:
            throw new Error(`No variant of AsyncActionOutput exists with 'status=${value['status']}'`);
    }

}

