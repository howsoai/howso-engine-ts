/**
 * Howso API
 * OpenAPI implementation for interacting with the Howso API. 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime';
/**
 * The requested CPU to provision for a compute instance.
 * @export
 * @interface CPULimits
 */
export interface CPULimits {
    /**
     * The minimum CPUs to provision (in millicores). The compute instance will be guaranteed to receive at least this
     * amount of CPU resources. If the system does not have enough CPU resources available the compute instance will
     * fail to be provisioned.
     * @type {number}
     * @memberof CPULimits
     */
    minimum?: number;
    /**
     * The maximum CPUs to provision (in millicores). The compute instance will be allowed to scale to use more CPU
     * resources up to this limit if available. Upon exceeding this limit the compute instance CPU will be throttled.
     * @type {number}
     * @memberof CPULimits
     */
    maximum?: number;
}

/**
 * Check if a given object implements the CPULimits interface.
 */
export function instanceOfCPULimits(value: object): boolean {
    const isInstance = true;

    return isInstance;
}

export function CPULimitsFromJSON(json: any): CPULimits {
    return CPULimitsFromJSONTyped(json, false);
}

export function CPULimitsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CPULimits {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'minimum': !exists(json, 'minimum') ? undefined : json['minimum'],
        'maximum': !exists(json, 'maximum') ? undefined : json['maximum'],
    };
}

export function CPULimitsToJSON(value?: CPULimits | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'minimum': value.minimum,
        'maximum': value.maximum,
    };
}

