/**
 * Howso API
 * OpenAPI implementation for interacting with the Howso API. 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime';
/**
 * 
 * @export
 * @interface PlatformVersion
 */
export interface PlatformVersion {
    /**
     * The API version.
     * @type {string}
     * @memberof PlatformVersion
     */
    api?: string;
    /**
     * The version of the locally installed client.
     * @type {string}
     * @memberof PlatformVersion
     */
    client?: string;
    /**
     * The platform release version.
     * @type {string}
     * @memberof PlatformVersion
     */
    platform?: string;
    /**
     * The Replicated version.
     * @type {string}
     * @memberof PlatformVersion
     */
    replicated?: string;
}

/**
 * Check if a given object implements the PlatformVersion interface.
 */
export function instanceOfPlatformVersion(value: object): boolean {
    const isInstance = true;

    return isInstance;
}

export function PlatformVersionFromJSON(json: any): PlatformVersion {
    return PlatformVersionFromJSONTyped(json, false);
}

export function PlatformVersionFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlatformVersion {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'api': !exists(json, 'api') ? undefined : json['api'],
        'client': !exists(json, 'client') ? undefined : json['client'],
        'platform': !exists(json, 'platform') ? undefined : json['platform'],
        'replicated': !exists(json, 'replicated') ? undefined : json['replicated'],
    };
}

export function PlatformVersionToJSON(value?: PlatformVersion | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'api': value.api,
        'client': value.client,
        'platform': value.platform,
        'replicated': value.replicated,
    };
}

