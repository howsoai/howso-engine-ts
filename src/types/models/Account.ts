/**
 * Howso API
 * OpenAPI implementation for interacting with the Howso API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from "../runtime";
import type { ProjectIdentity } from "./ProjectIdentity";
import { ProjectIdentityFromJSON, ProjectIdentityToJSON } from "./ProjectIdentity";

/**
 *
 * @export
 * @interface Account
 */
export interface Account {
  /**
   * The user's UUID.
   * @type {string}
   * @memberof Account
   */
  uuid?: string;
  /**
   * The user's username.
   * @type {string}
   * @memberof Account
   */
  username?: string;
  /**
   * The user's first name.
   * @type {string}
   * @memberof Account
   */
  first_name?: string;
  /**
   * The user's last name.
   * @type {string}
   * @memberof Account
   */
  last_name?: string;
  /**
   * THe user's email address.
   * @type {string}
   * @memberof Account
   */
  email?: string;
  /**
   *
   * @type {ProjectIdentity}
   * @memberof Account
   */
  default_project?: ProjectIdentity;
}

/**
 * Check if a given object implements the Account interface.
 */
export function instanceOfAccount(value: object): boolean {
  const isInstance = true;

  return isInstance;
}

export function AccountFromJSON(json: any): Account {
  return AccountFromJSONTyped(json, false);
}

export function AccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): Account {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    uuid: !exists(json, "uuid") ? undefined : json["uuid"],
    username: !exists(json, "username") ? undefined : json["username"],
    first_name: !exists(json, "first_name") ? undefined : json["first_name"],
    last_name: !exists(json, "last_name") ? undefined : json["last_name"],
    email: !exists(json, "email") ? undefined : json["email"],
    default_project: !exists(json, "default_project") ? undefined : ProjectIdentityFromJSON(json["default_project"]),
  };
}

export function AccountToJSON(value?: Account | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    uuid: value.uuid,
    username: value.username,
    first_name: value.first_name,
    last_name: value.last_name,
    email: value.email,
    default_project: ProjectIdentityToJSON(value.default_project),
  };
}
