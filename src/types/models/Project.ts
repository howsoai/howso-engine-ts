/**
 * Howso API
 * OpenAPI implementation for interacting with the Howso API. 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime';
import type { AccountIdentity } from './AccountIdentity';
import {
    AccountIdentityFromJSON,
    AccountIdentityToJSON,
} from './AccountIdentity';

/**
 * 
 * @export
 * @interface Project
 */
export interface Project {
    /**
     * The project UUID.
     * @type {string}
     * @memberof Project
     */
    id: string;
    /**
     * The project name.
     * @type {string}
     * @memberof Project
     */
    name: string;
    /**
     * Designates if the project is not publicly visible.
     * @type {boolean}
     * @memberof Project
     */
    is_private?: boolean;
    /**
     * If project is your default.
     * @type {boolean}
     * @memberof Project
     */
    is_default?: boolean;
    /**
     * 
     * @type {AccountIdentity}
     * @memberof Project
     */
    created_by?: AccountIdentity;
    /**
     * 
     * @type {Date}
     * @memberof Project
     */
    created_date?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Project
     */
    modified_date?: Date;
    /**
     * Permissions types the user has in this project.
     * @type {Array<string>}
     * @memberof Project
     */
    permissions?: Array<string>;
}

/**
 * Check if a given object implements the Project interface.
 */
export function instanceOfProject(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function ProjectFromJSON(json: any): Project {
    return ProjectFromJSONTyped(json, false);
}

export function ProjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): Project {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'is_private': !exists(json, 'is_private') ? undefined : json['is_private'],
        'is_default': !exists(json, 'is_default') ? undefined : json['is_default'],
        'created_by': !exists(json, 'created_by') ? undefined : AccountIdentityFromJSON(json['created_by']),
        'created_date': !exists(json, 'created_date') ? undefined : (new Date(json['created_date'])),
        'modified_date': !exists(json, 'modified_date') ? undefined : (new Date(json['modified_date'])),
        'permissions': !exists(json, 'permissions') ? undefined : json['permissions'],
    };
}

export function ProjectToJSON(value?: Project | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'is_private': value.is_private,
        'is_default': value.is_default,
        'created_by': AccountIdentityToJSON(value.created_by),
        'created_date': value.created_date === undefined ? undefined : (value.created_date.toISOString()),
        'modified_date': value.modified_date === undefined ? undefined : (value.modified_date.toISOString()),
        'permissions': value.permissions,
    };
}

