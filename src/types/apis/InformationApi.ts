/**
 * Howso API
 * OpenAPI implementation for interacting with the Howso API. 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  PlatformVersion,
  TraineeInformation,
} from '../models';
import {
    PlatformVersionFromJSON,
    TraineeInformationFromJSON,
} from '../models';

export interface GetTraineeInformationRequest {
    trainee_id: string;
}

/**
 * 
 */
export class InformationApi extends runtime.BaseAPI {

    /**
     * Get detail information about trainee.
     * Trainee information
     */
    async getTraineeInformationRaw(requestParameters: GetTraineeInformationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<| TraineeInformation>> {
        if (requestParameters.trainee_id === null || requestParameters.trainee_id === undefined) {
            throw new runtime.RequiredError('trainee_id','Required parameter requestParameters.trainee_id was null or undefined when calling getTraineeInformation.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth_ums", ["trainee:read"]);
        }

        const response = await this.request({
            path: `/v2/trainee/{trainee_id}/info`.replace(`{${"trainee_id"}}`, encodeURIComponent(String(requestParameters.trainee_id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TraineeInformationFromJSON(jsonValue));
    }

    /**
     * Get detail information about trainee.
     * Trainee information
     */
    async getTraineeInformation(trainee_id: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<| TraineeInformation> {
        const response = await this.getTraineeInformationRaw({ trainee_id: trainee_id }, initOverrides);
        return await response.value();
    }

    /**
     * Get version information.
     */
    async getVersionRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<| PlatformVersion>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth_ums", []);
        }

        const response = await this.request({
            path: `/v2/version`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PlatformVersionFromJSON(jsonValue));
    }

    /**
     * Get version information.
     */
    async getVersion(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<| PlatformVersion> {
        const response = await this.getVersionRaw(initOverrides);
        return await response.value();
    }

}
